"use strict";(self.webpackChunk_lodestar_docs=self.webpackChunk_lodestar_docs||[]).push([[9577],{6548:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>a,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var r=s(4848),d=s(8453);const n={},i="Lodestar Prover",l={id:"libraries/lightclient-prover/prover",title:"Lodestar Prover",description:"Discord",source:"@site/pages/libraries/lightclient-prover/prover.md",sourceDirName:"libraries/lightclient-prover",slug:"/libraries/lightclient-prover/prover",permalink:"/lodestar/libraries/lightclient-prover/prover",draft:!1,unlisted:!1,editUrl:"https://github.com/ChainSafe/lodestar/tree/unstable/docs/pages/libraries/lightclient-prover/prover.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CLI Reference",permalink:"/lodestar/libraries/lightclient-prover/lightclient-cli"},next:{title:"Supporting Libraries",permalink:"/lodestar/supporting-libraries/"}},o={},c=[{value:"Usage",id:"usage",level:2},{value:"How to detect a web3 provider",id:"how-to-detect-a-web3-provider",level:2},{value:"Supported Web3 Methods",id:"supported-web3-methods",level:2},{value:"Non-supported features",id:"non-supported-features",level:2},{value:"Warnings",id:"warnings",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"What you need",id:"what-you-need",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Contributors",id:"contributors",level:2},{value:"License",id:"license",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"lodestar-prover",children:"Lodestar Prover"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://discord.gg/aMxzVcr",children:(0,r.jsx)(t.img,{src:"https://img.shields.io/discord/593655374469660673.svg?label=Discord&logo=discord",alt:"Discord"})}),"\n",(0,r.jsx)(t.a,{href:"https://github.com/ethereum/beacon-APIs/releases/tag/v2.5.0",children:(0,r.jsx)(t.img,{src:"https://img.shields.io/badge/ETH%20beacon--APIs-2.5.0-blue",alt:"ETH Beacon APIs Spec v2.5.0"})}),"\n",(0,r.jsx)(t.img,{src:"https://img.shields.io/badge/ES-2021-yellow",alt:"ES Version"}),"\n",(0,r.jsx)(t.img,{src:"https://img.shields.io/badge/node-22.x-green",alt:"Node Version"})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["This package is part of ",(0,r.jsx)(t.a,{href:"https://lodestar.chainsafe.io",children:"ChainSafe's Lodestar"})," project"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"A set of tools allowing to verify EL client JSON-RPC calls."}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(t.p,{children:["You can use the ",(0,r.jsx)(t.code,{children:"@lodestar/prover"})," in two ways, as a Web3 Provider and as proxy. For prover use case see below example."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import Web3 from "web3";\nimport {createVerifiedExecutionProvider, LCTransport} from "@lodestar/prover";\n\nconst httpProvider = new Web3.providers.HttpProvider("https://lodestar-sepoliarpc.chainsafe.io");\n\nconst {provider, proofProvider} = createVerifiedExecutionProvider(httpProvider, {\n  transport: LCTransport.Rest,\n  urls: ["https://lodestar-sepolia.chainsafe.io"],\n  network: "sepolia",\n  wsCheckpoint: "trusted-checkpoint",\n});\n\nconst web3 = new Web3(provider);\n\nconst address = "0xf97e180c050e5Ab072211Ad2C213Eb5AEE4DF134";\nconst balance = await web3.eth.getBalance(address, "latest");\nconsole.log({balance, address});\n'})}),"\n",(0,r.jsxs)(t.p,{children:["In this scenario the actual provider is mutated to handle the RPC requests and verify those. So here if you use ",(0,r.jsx)(t.code,{children:"provider"})," or ",(0,r.jsx)(t.code,{children:"httpProvider"})," both are the same objects. This behavior is useful when you already have an application and usage of any provider across the code space and don't want to change the code. So you mutate the provider during startup."]}),"\n",(0,r.jsxs)(t.p,{children:["For some scenarios when you don't want to mutate the provider you can pass an option ",(0,r.jsx)(t.code,{children:"mutateProvider"})," as ",(0,r.jsx)(t.code,{children:"false"}),". In this scenario the object ",(0,r.jsx)(t.code,{children:"httpProvider"})," is not mutated and you get a new object ",(0,r.jsx)(t.code,{children:"provider"}),". This is useful when your provider object does not allow mutation, e.g. Metamask provider accessible through ",(0,r.jsx)(t.code,{children:"window.ethereum"}),". If not provided ",(0,r.jsx)(t.code,{children:"mutateProvider"})," is considered as ",(0,r.jsx)(t.code,{children:"true"})," by default. In coming releases we will switch its default behavior to ",(0,r.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'import Web3 from "web3";\nimport {createVerifiedExecutionProvider, LCTransport} from "@lodestar/prover";\n\nconst httpProvider = new Web3.providers.HttpProvider("https://lodestar-sepoliarpc.chainsafe.io");\n\nconst {provider, proofProvider} = createVerifiedExecutionProvider(httpProvider, {\n  transport: LCTransport.Rest,\n  urls: ["https://lodestar-sepolia.chainsafe.io"],\n  network: "sepolia",\n  wsCheckpoint: "trusted-checkpoint",\n  mutateProvider: false,\n});\n\nconst web3 = new Web3(provider);\n\nconst address = "0xf97e180c050e5Ab072211Ad2C213Eb5AEE4DF134";\nconst balance = await web3.eth.getBalance(address, "latest");\nconsole.log({balance, address});\n'})}),"\n",(0,r.jsx)(t.p,{children:"You can also invoke the package as binary."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm i -g @lodestar/prover\n\nlodestar-prover proxy \\\n  --network sepolia \\\n  --executionRpcUrl https://lodestar-sepoliarpc.chainsafe.io \\\n  --beaconUrls https://lodestar-sepolia.chainsafe.io \\\n  --port 8080\n"})}),"\n",(0,r.jsx)(t.h2,{id:"how-to-detect-a-web3-provider",children:"How to detect a web3 provider"}),"\n",(0,r.jsx)(t.p,{children:"There can be different implementations of the web3 providers and each can handle the RPC request differently. We call those different provider types. We had provided builtin support for common providers e.g. web3.js, ethers or any eip1193 compatible providers. We inspect given provider instance at runtime to detect the correct provider type."}),"\n",(0,r.jsxs)(t.p,{children:["If your project is using some provider type which is not among above list, you have the option to register a custom provider type with the ",(0,r.jsx)(t.code,{children:"createVerifiedExecutionProvider"})," with the option ",(0,r.jsx)(t.code,{children:"providerTypes"})," which will be an array of your supported provider types. Your custom provider types will have higher priority than default provider types. Please see ",(0,r.jsx)(t.a,{href:"https://github.com/ChainSafe/lodestar/tree/unstable/packages/prover/src/provider_types",children:"existing provide types implementations"})," to know how to implement your own if needed."]}),"\n",(0,r.jsx)(t.h2,{id:"supported-web3-methods",children:"Supported Web3 Methods"}),"\n",(0,r.jsx)(t.p,{children:"\u2705 - Completed"}),"\n",(0,r.jsx)(t.p,{children:"\u231b - Todo"}),"\n",(0,r.jsxs)(t.p,{children:["\u27a1\ufe0f - Request will be forward to EL without any intermediary manipulations. You can limit these by providing ",(0,r.jsx)(t.code,{children:"unverifiedWhitelist"})," option for provider or ",(0,r.jsx)(t.code,{children:"--unverifiedWhitelist"})," from the cli. If not set then all methods will be forwarded."]}),"\n",(0,r.jsx)(t.p,{children:"\u2747\ufe0f - Always forwarded to EL."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Group"}),(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"Status"}),(0,r.jsx)(t.th,{children:"Version"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Block"}),(0,r.jsx)(t.td,{children:"eth_getBlockByHash"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getBlockByNumber"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getBlockTransactionCountByHash"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getBlockTransactionCountByNumber"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getUncleCountByBlockHash"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getUncleCountByBlockNumber"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Chain/Network"}),(0,r.jsx)(t.td,{children:"eth_chainId"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_syncing"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_coinbase"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_accounts"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_blockNumber"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Call and Estimate"}),(0,r.jsx)(t.td,{children:"eth_call"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_estimateGas"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_createAccessList"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_gasPrice"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_maxPriorityFeePerGas"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_feeHistory"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Filters"}),(0,r.jsx)(t.td,{children:"eth_newFilter"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_newBlockFilter"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_newPendingTransactionFilter"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_uninstallFilter"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getFilterChanges"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getFilterLogs"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getLogs"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Mining"}),(0,r.jsx)(t.td,{children:"eth_mining"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_hashrate"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getWork"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_submitWork"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_submitHashrate"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Signing"}),(0,r.jsx)(t.td,{children:"eth_sign"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_signTransaction"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"State"}),(0,r.jsx)(t.td,{children:"eth_getBalance"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getStorageAt"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getTransactionCount"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getCode"}),(0,r.jsx)(t.td,{children:"\u2705"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getProof"}),(0,r.jsx)(t.td,{children:"\u2747\ufe0f"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Transactions"}),(0,r.jsx)(t.td,{children:"eth_sendTransaction"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_sendRawTransaction"}),(0,r.jsx)(t.td,{children:"\u27a1\ufe0f"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getTransactionByHash"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getTransactionByBlockHashAndIndex"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getTransactionByBlockNumberAndIndex"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_getTransactionReceipt"}),(0,r.jsx)(t.td,{children:"\u231b"}),(0,r.jsx)(t.td,{children:"v2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Events"}),(0,r.jsx)(t.td,{children:"eth_subscribe"}),(0,r.jsx)(t.td,{children:"\u2747\ufe0f"}),(0,r.jsx)(t.td,{children:"v0"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"eth_unsubscribe"}),(0,r.jsx)(t.td,{children:"\u2747\ufe0f"}),(0,r.jsx)(t.td,{children:"v0"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"non-supported-features",children:"Non-supported features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Currently does not support batch requests."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"warnings",children:"Warnings"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["To use this prover the ethereum provider must support the ",(0,r.jsx)(t.code,{children:"eth_getProof"})," method. Unfortunately, Infura does not currently support this endpoint. As an alternative, we suggest using Alchemy."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://nodejs.org/",children:"NodeJS"})," (LTS)"]}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://classic.yarnpkg.com/lang/en/",children:"Yarn"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"what-you-need",children:"What you need"}),"\n",(0,r.jsxs)(t.p,{children:["You will need to go over the ",(0,r.jsx)(t.a,{href:"https://github.com/ethereum/beacon-apis",children:"specification"}),". You will also need to have a ",(0,r.jsx)(t.a,{href:"https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/light-client/light-client.md",children:"basic understanding of lightclient"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Follow the ",(0,r.jsx)(t.a,{href:"https://chainsafe.github.io/lodestar/run/getting-started/installation",children:"installation guide"})," to install Lodestar."]}),"\n",(0,r.jsxs)(t.li,{children:["Quickly try out the whole stack by ",(0,r.jsx)(t.a,{href:"https://chainsafe.github.io/lodestar/contribution/advanced-topics/setting-up-a-testnet",children:"starting a local testnet"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"contributors",children:"Contributors"}),"\n",(0,r.jsxs)(t.p,{children:["Read our ",(0,r.jsx)(t.a,{href:"https://chainsafe.github.io/lodestar/contribution/getting-started",children:"contributors document"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/ChainSafe/lodestar/issues/new/choose",children:"submit an issue"})," or talk to us on our ",(0,r.jsx)(t.a,{href:"https://discord.gg/yjyvFRP",children:"discord"}),"!"]}),"\n",(0,r.jsx)(t.h2,{id:"license",children:"License"}),"\n",(0,r.jsxs)(t.p,{children:["Apache-2.0 ",(0,r.jsx)(t.a,{href:"https://chainsafe.io",children:"ChainSafe Systems"})]})]})}function a(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(6540);const d={},n=r.createContext(d);function i(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);